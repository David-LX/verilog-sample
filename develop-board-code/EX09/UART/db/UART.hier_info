|UART
clk => clk~0.IN3
rst_n => comb~1.IN0
Uart2_R => Uart2_R~0.IN1
Uart2_T <= rs232tx:rs232_tx_block.txd


|UART|clock_gen_select:clock_unit
clk => dds_prescale_count[2].CLK
clk => dds_prescale_count[1].CLK
clk => dds_prescale_count[0].CLK
clk => dds_phase[5].CLK
clk => dds_phase[4].CLK
clk => dds_phase[3].CLK
clk => dds_phase[2].CLK
clk => dds_phase[1].CLK
clk => dds_phase[0].CLK
clk => delayed_pulse.CLK
reset => dds_phase~11.OUTPUTSELECT
reset => dds_phase~10.OUTPUTSELECT
reset => dds_phase~9.OUTPUTSELECT
reset => dds_phase~8.OUTPUTSELECT
reset => dds_phase~7.OUTPUTSELECT
reset => dds_phase~6.OUTPUTSELECT
reset => dds_prescale_count~5.OUTPUTSELECT
reset => dds_prescale_count~4.OUTPUTSELECT
reset => dds_prescale_count~3.OUTPUTSELECT
rate_select[0] => Decoder2.IN2
rate_select[0] => Decoder1.IN1
rate_select[1] => Decoder2.IN1
rate_select[1] => Decoder0.IN1
rate_select[2] => Decoder2.IN0
rate_select[2] => Decoder1.IN0
rate_select[2] => Decoder0.IN0
rate_select[2] => Add2.IN9
clk_out <= clk_out~0.DB_MAX_OUTPUT_PORT_TYPE


|UART|rs232tx:rs232_tx_block
clk => prescaler_count_l[3].CLK
clk => prescaler_count_l[2].CLK
clk => prescaler_count_l[1].CLK
clk => prescaler_count_l[0].CLK
clk => tx_bit_count_l[3].CLK
clk => tx_bit_count_l[2].CLK
clk => tx_bit_count_l[1].CLK
clk => tx_bit_count_l[0].CLK
clk => data_in_waiting[7].CLK
clk => data_in_waiting[6].CLK
clk => data_in_waiting[5].CLK
clk => data_in_waiting[4].CLK
clk => data_in_waiting[3].CLK
clk => data_in_waiting[2].CLK
clk => data_in_waiting[1].CLK
clk => data_in_waiting[0].CLK
clk => q[9].CLK
clk => q[8].CLK
clk => q[7].CLK
clk => q[6].CLK
clk => q[5].CLK
clk => q[4].CLK
clk => q[3].CLK
clk => q[2].CLK
clk => q[1].CLK
clk => q[0].CLK
clk => m1_state~4.IN1
tx_clk => tx_clk_1x.IN1
tx_clk => prescaler_count_l~7.OUTPUTSELECT
tx_clk => prescaler_count_l~6.OUTPUTSELECT
tx_clk => prescaler_count_l~5.OUTPUTSELECT
tx_clk => prescaler_count_l~4.OUTPUTSELECT
reset => q~29.OUTPUTSELECT
reset => q~28.OUTPUTSELECT
reset => q~27.OUTPUTSELECT
reset => q~26.OUTPUTSELECT
reset => q~25.OUTPUTSELECT
reset => q~24.OUTPUTSELECT
reset => q~23.OUTPUTSELECT
reset => q~22.OUTPUTSELECT
reset => q~21.OUTPUTSELECT
reset => q~20.OUTPUTSELECT
reset => m1_state~3.OUTPUTSELECT
reset => m1_state~2.OUTPUTSELECT
reset => m1_state~1.OUTPUTSELECT
reset => m1_state~0.OUTPUTSELECT
reset => prescaler_count_l~11.OUTPUTSELECT
reset => prescaler_count_l~10.OUTPUTSELECT
reset => prescaler_count_l~9.OUTPUTSELECT
reset => prescaler_count_l~8.OUTPUTSELECT
load => m1_next_state~1.DATAA
load => always4~0.IN1
load => start_sending~1.IN1
load => m1_next_state~0.DATAA
load => data_in_waiting[0].ENA
load => data_in_waiting[1].ENA
load => data_in_waiting[2].ENA
load => data_in_waiting[3].ENA
load => data_in_waiting[4].ENA
load => data_in_waiting[5].ENA
load => data_in_waiting[6].ENA
load => data_in_waiting[7].ENA
data[0] => data_in_waiting[0].DATAIN
data[1] => data_in_waiting[1].DATAIN
data[2] => data_in_waiting[2].DATAIN
data[3] => data_in_waiting[3].DATAIN
data[4] => data_in_waiting[4].DATAIN
data[5] => data_in_waiting[5].DATAIN
data[6] => data_in_waiting[6].DATAIN
data[7] => data_in_waiting[7].DATAIN
load_request <= Selector0.DB_MAX_OUTPUT_PORT_TYPE
txd <= q[0].DB_MAX_OUTPUT_PORT_TYPE


|UART|rs232rx:rs232_rx_block
clk => m2_state.CLK
clk => intrabit_count_l[3].CLK
clk => intrabit_count_l[2].CLK
clk => intrabit_count_l[1].CLK
clk => intrabit_count_l[0].CLK
clk => q[9].CLK
clk => q[8].CLK
clk => q[7].CLK
clk => q[6].CLK
clk => q[5].CLK
clk => q[4].CLK
clk => q[3].CLK
clk => q[2].CLK
clk => q[1].CLK
clk => q[0].CLK
clk => data[7]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[0]~reg0.CLK
clk => m1_state~6.IN1
rx_clk => mid_bit_l.IN0
rx_clk => intrabit_count_l~7.OUTPUTSELECT
rx_clk => intrabit_count_l~6.OUTPUTSELECT
rx_clk => intrabit_count_l~5.OUTPUTSELECT
rx_clk => intrabit_count_l~4.OUTPUTSELECT
reset => Selector0.IN2
reset => Selector0.IN3
reset => Selector0.IN4
reset => data~15.OUTPUTSELECT
reset => data~14.OUTPUTSELECT
reset => data~13.OUTPUTSELECT
reset => data~12.OUTPUTSELECT
reset => data~11.OUTPUTSELECT
reset => data~10.OUTPUTSELECT
reset => data~9.OUTPUTSELECT
reset => data~8.OUTPUTSELECT
reset => m2_state~0.OUTPUTSELECT
reset => m1_state~5.OUTPUTSELECT
reset => m1_state~4.OUTPUTSELECT
reset => m1_state~3.OUTPUTSELECT
reset => m1_state~2.OUTPUTSELECT
reset => m1_state~1.OUTPUTSELECT
reset => m1_state~0.OUTPUTSELECT
reset => Selector2.IN2
reset => Selector4.IN2
reset => Selector5.IN1
rxd => Selector0.IN5
rxd => q~0.DATAB
rxd => always1~1.IN1
rxd => Selector1.IN1
rxd => always1~0.IN1
read => m2_next_state.DATAB
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_ready <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
error_over_run <= m1_state.m1_over_run.DB_MAX_OUTPUT_PORT_TYPE
error_under_run <= m1_state.m1_under_run.DB_MAX_OUTPUT_PORT_TYPE
error_all_low <= m1_state.m1_all_low.DB_MAX_OUTPUT_PORT_TYPE


