|MAXII_PicoBlaze
output[0] <= output[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= output[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= output[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= output[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[4] <= output[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[5] <= output[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[6] <= output[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[7] <= output[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reset_n => clkdiv:clk_div.reset_n
reset_n => picoblaze:processor.reset
reset_n => divclkdelay1.ACLR
reset_n => divclkdelay.ACLR
clk => clkdiv:clk_div.clkin


|MAXII_PicoBlaze|clkdiv:clk_div
clkin => \clk_div:cnt[20].CLK
clkin => \clk_div:cnt[19].CLK
clkin => \clk_div:cnt[18].CLK
clkin => \clk_div:cnt[17].CLK
clkin => \clk_div:cnt[16].CLK
clkin => \clk_div:cnt[15].CLK
clkin => \clk_div:cnt[14].CLK
clkin => \clk_div:cnt[13].CLK
clkin => \clk_div:cnt[12].CLK
clkin => \clk_div:cnt[11].CLK
clkin => \clk_div:cnt[10].CLK
clkin => \clk_div:cnt[9].CLK
clkin => \clk_div:cnt[8].CLK
clkin => \clk_div:cnt[7].CLK
clkin => \clk_div:cnt[6].CLK
clkin => \clk_div:cnt[5].CLK
clkin => \clk_div:cnt[4].CLK
clkin => \clk_div:cnt[3].CLK
clkin => \clk_div:cnt[2].CLK
clkin => \clk_div:cnt[1].CLK
clkin => \clk_div:cnt[0].CLK
clkin => s_clk.CLK
reset_n => \clk_div:cnt[20].ACLR
reset_n => \clk_div:cnt[19].ACLR
reset_n => \clk_div:cnt[18].ACLR
reset_n => \clk_div:cnt[17].ACLR
reset_n => \clk_div:cnt[16].ACLR
reset_n => \clk_div:cnt[15].ACLR
reset_n => \clk_div:cnt[14].ACLR
reset_n => \clk_div:cnt[13].ACLR
reset_n => \clk_div:cnt[12].ACLR
reset_n => \clk_div:cnt[11].ACLR
reset_n => \clk_div:cnt[10].ACLR
reset_n => \clk_div:cnt[9].ACLR
reset_n => \clk_div:cnt[8].ACLR
reset_n => \clk_div:cnt[7].ACLR
reset_n => \clk_div:cnt[6].ACLR
reset_n => \clk_div:cnt[5].ACLR
reset_n => \clk_div:cnt[4].ACLR
reset_n => \clk_div:cnt[3].ACLR
reset_n => \clk_div:cnt[2].ACLR
reset_n => \clk_div:cnt[1].ACLR
reset_n => \clk_div:cnt[0].ACLR
reset_n => s_clk.ACLR
clkout <= s_clk.DB_MAX_OUTPUT_PORT_TYPE


|MAXII_PicoBlaze|picoblaze:processor
address[0] <= program_counter:prog_count.program_count[0]
address[1] <= program_counter:prog_count.program_count[1]
address[2] <= program_counter:prog_count.program_count[2]
address[3] <= program_counter:prog_count.program_count[3]
address[4] <= program_counter:prog_count.program_count[4]
address[5] <= program_counter:prog_count.program_count[5]
address[6] <= program_counter:prog_count.program_count[6]
address[7] <= program_counter:prog_count.program_count[7]
instruction[0] => shift_rotate:shift_group.inject_bit
instruction[0] => interrupt_logic:interrupt_control.instruction0
instruction[0] => program_counter:prog_count.low_instruction[0]
instruction[0] => second_operand[0].DATAA
instruction[1] => shift_rotate:shift_group.code0
instruction[1] => program_counter:prog_count.low_instruction[1]
instruction[1] => second_operand[1].DATAA
instruction[2] => shift_rotate:shift_group.code1
instruction[2] => program_counter:prog_count.low_instruction[2]
instruction[2] => second_operand[2].DATAA
instruction[3] => shift_rotate:shift_group.shift_right
instruction[3] => program_counter:prog_count.low_instruction[3]
instruction[3] => second_operand[3].DATAA
instruction[4] => program_counter:prog_count.low_instruction[4]
instruction[4] => second_operand[4].DATAA
instruction[5] => register_bank:data_registers.dpra[0]
instruction[5] => program_counter:prog_count.low_instruction[5]
instruction[5] => second_operand[5].DATAA
instruction[6] => register_bank:data_registers.dpra[1]
instruction[6] => program_counter:prog_count.low_instruction[6]
instruction[6] => second_operand[6].DATAA
instruction[7] => register_bank:data_registers.dpra[2]
instruction[7] => program_counter:prog_count.low_instruction[7]
instruction[7] => second_operand[7].DATAA
instruction[8] => register_bank:data_registers.a[0]
instruction[8] => Equal3.IN3
instruction[8] => Equal2.IN3
instruction[8] => Equal1.IN3
instruction[8] => Equal0.IN3
instruction[9] => register_bank:data_registers.a[1]
instruction[9] => Equal3.IN2
instruction[9] => Equal2.IN2
instruction[9] => Equal1.IN2
instruction[9] => Equal0.IN2
instruction[10] => register_bank:data_registers.a[2]
instruction[10] => stack_counter:stack_control.conditional
instruction[10] => program_counter:prog_count.conditional
instruction[11] => arithmetic_process:arithmetic_group.code0
instruction[11] => logical_bus_processing:logical_group.code0
instruction[11] => Equal29.IN9
instruction[11] => Equal28.IN9
instruction[11] => Equal27.IN9
instruction[11] => Equal26.IN9
instruction[11] => Equal25.IN9
instruction[11] => Equal24.IN9
instruction[11] => Equal23.IN9
instruction[11] => Equal22.IN9
instruction[11] => Equal21.IN9
instruction[11] => Equal20.IN9
instruction[11] => Equal19.IN9
instruction[11] => Equal18.IN9
instruction[11] => Equal17.IN9
instruction[11] => Equal16.IN9
instruction[11] => Equal15.IN9
instruction[11] => Equal14.IN9
instruction[11] => Equal13.IN9
instruction[11] => Equal12.IN9
instruction[11] => Equal11.IN9
instruction[11] => Equal10.IN9
instruction[11] => Equal9.IN9
instruction[11] => Equal8.IN9
instruction[11] => Equal7.IN9
instruction[11] => Equal6.IN9
instruction[11] => Equal5.IN9
instruction[11] => Equal4.IN9
instruction[12] => arithmetic_process:arithmetic_group.code1
instruction[12] => logical_bus_processing:logical_group.code1
instruction[12] => Equal29.IN8
instruction[12] => Equal28.IN8
instruction[12] => Equal27.IN8
instruction[12] => Equal26.IN8
instruction[12] => Equal25.IN8
instruction[12] => Equal24.IN8
instruction[12] => Equal23.IN8
instruction[12] => Equal22.IN8
instruction[12] => Equal21.IN8
instruction[12] => Equal20.IN8
instruction[12] => Equal19.IN8
instruction[12] => Equal18.IN8
instruction[12] => Equal17.IN8
instruction[12] => Equal16.IN8
instruction[12] => Equal15.IN8
instruction[12] => Equal14.IN8
instruction[12] => Equal13.IN8
instruction[12] => Equal12.IN8
instruction[12] => Equal11.IN8
instruction[12] => Equal10.IN8
instruction[12] => Equal9.IN8
instruction[12] => Equal8.IN8
instruction[12] => Equal7.IN8
instruction[12] => Equal6.IN8
instruction[12] => Equal5.IN8
instruction[12] => Equal4.IN8
instruction[13] => Equal29.IN7
instruction[13] => Equal28.IN7
instruction[13] => Equal27.IN7
instruction[13] => Equal26.IN7
instruction[13] => Equal25.IN7
instruction[13] => Equal24.IN7
instruction[13] => Equal23.IN7
instruction[13] => Equal22.IN7
instruction[13] => Equal21.IN7
instruction[13] => Equal20.IN7
instruction[13] => Equal19.IN7
instruction[13] => Equal18.IN7
instruction[13] => Equal17.IN7
instruction[13] => Equal16.IN7
instruction[13] => Equal15.IN7
instruction[13] => Equal14.IN7
instruction[13] => Equal13.IN7
instruction[13] => Equal12.IN7
instruction[13] => Equal11.IN7
instruction[13] => Equal10.IN7
instruction[13] => Equal9.IN7
instruction[13] => Equal8.IN7
instruction[13] => Equal7.IN7
instruction[13] => Equal6.IN7
instruction[13] => Equal5.IN7
instruction[13] => Equal4.IN7
instruction[14] => second_operand[0].OUTPUTSELECT
instruction[14] => second_operand[1].OUTPUTSELECT
instruction[14] => second_operand[2].OUTPUTSELECT
instruction[14] => second_operand[3].OUTPUTSELECT
instruction[14] => second_operand[4].OUTPUTSELECT
instruction[14] => second_operand[5].OUTPUTSELECT
instruction[14] => second_operand[6].OUTPUTSELECT
instruction[14] => second_operand[7].OUTPUTSELECT
instruction[14] => Equal29.IN6
instruction[14] => Equal28.IN6
instruction[14] => Equal27.IN6
instruction[14] => Equal26.IN6
instruction[14] => Equal25.IN6
instruction[14] => Equal24.IN6
instruction[14] => Equal23.IN6
instruction[14] => Equal22.IN6
instruction[14] => Equal21.IN6
instruction[14] => Equal20.IN6
instruction[14] => Equal19.IN6
instruction[14] => Equal18.IN6
instruction[14] => Equal17.IN6
instruction[14] => Equal16.IN6
instruction[14] => Equal15.IN6
instruction[14] => Equal14.IN6
instruction[14] => Equal13.IN6
instruction[14] => Equal12.IN6
instruction[14] => Equal11.IN6
instruction[14] => Equal10.IN6
instruction[14] => Equal9.IN6
instruction[14] => Equal8.IN6
instruction[14] => Equal7.IN6
instruction[14] => Equal6.IN6
instruction[14] => Equal5.IN6
instruction[14] => Equal4.IN6
instruction[15] => Equal29.IN5
instruction[15] => Equal28.IN5
instruction[15] => Equal27.IN5
instruction[15] => Equal26.IN5
instruction[15] => Equal25.IN5
instruction[15] => Equal24.IN5
instruction[15] => Equal23.IN5
instruction[15] => Equal22.IN5
instruction[15] => Equal21.IN5
instruction[15] => Equal20.IN5
instruction[15] => Equal19.IN5
instruction[15] => Equal18.IN5
instruction[15] => Equal17.IN5
instruction[15] => Equal16.IN5
instruction[15] => Equal15.IN5
instruction[15] => Equal14.IN5
instruction[15] => Equal13.IN5
instruction[15] => Equal12.IN5
instruction[15] => Equal11.IN5
instruction[15] => Equal10.IN5
instruction[15] => Equal9.IN5
instruction[15] => Equal8.IN5
instruction[15] => Equal7.IN5
instruction[15] => Equal6.IN5
instruction[15] => Equal5.IN5
instruction[15] => Equal4.IN5
port_id[0] <= second_operand[0].DB_MAX_OUTPUT_PORT_TYPE
port_id[1] <= second_operand[1].DB_MAX_OUTPUT_PORT_TYPE
port_id[2] <= second_operand[2].DB_MAX_OUTPUT_PORT_TYPE
port_id[3] <= second_operand[3].DB_MAX_OUTPUT_PORT_TYPE
port_id[4] <= second_operand[4].DB_MAX_OUTPUT_PORT_TYPE
port_id[5] <= second_operand[5].DB_MAX_OUTPUT_PORT_TYPE
port_id[6] <= second_operand[6].DB_MAX_OUTPUT_PORT_TYPE
port_id[7] <= second_operand[7].DB_MAX_OUTPUT_PORT_TYPE
write_strobe <= IO_strobe_logic:IO_strobes.write_strobe
out_port[0] <= register_bank:data_registers.spo_bus[0]
out_port[1] <= register_bank:data_registers.spo_bus[1]
out_port[2] <= register_bank:data_registers.spo_bus[2]
out_port[3] <= register_bank:data_registers.spo_bus[3]
out_port[4] <= register_bank:data_registers.spo_bus[4]
out_port[5] <= register_bank:data_registers.spo_bus[5]
out_port[6] <= register_bank:data_registers.spo_bus[6]
out_port[7] <= register_bank:data_registers.spo_bus[7]
read_strobe <= IO_strobe_logic:IO_strobes.read_strobe
in_port[0] => ALU_result~1.IN1
in_port[1] => ALU_result~7.IN1
in_port[2] => ALU_result~13.IN1
in_port[3] => ALU_result~19.IN1
in_port[4] => ALU_result~25.IN1
in_port[5] => ALU_result~31.IN1
in_port[6] => ALU_result~37.IN1
in_port[7] => ALU_result~43.IN1
interrupt => interrupt_capture:get_interrupt.interrupt
reset => T_state_and_Reset:basic_control.reset_input
clk => interrupt_logic:interrupt_control.clk
clk => interrupt_capture:get_interrupt.clk
clk => stack_counter:stack_control.clk
clk => stack_ram:stack_memory.clk
clk => register_bank:data_registers.wclk
clk => program_counter:prog_count.clk
clk => zero_flag_logic:zero_logic.clk
clk => carry_flag_logic:carry_logic.clk
clk => register_and_flag_enable:reg_and_flag_enables.clk
clk => T_state_and_Reset:basic_control.clk
clk => logical_bus_processing:logical_group.clk
clk => shift_rotate:shift_group.clk
clk => arithmetic_process:arithmetic_group.clk
clk => IO_strobe_logic:IO_strobes.clk


|MAXII_PicoBlaze|picoblaze:processor|IO_strobe_logic:IO_strobes
i_input => read_event~0.IN1
i_output => write_event~0.IN1
active_interrupt => read_event.IN0
active_interrupt => write_event.IN1
T_state => read_event~0.IN0
T_state => write_event~0.IN0
reset => read_strobe~0.OUTPUTSELECT
reset => write_strobe~0.OUTPUTSELECT
write_strobe <= write_strobe~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_strobe <= read_strobe~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => write_strobe~reg0.CLK
clk => read_strobe~reg0.CLK


|MAXII_PicoBlaze|picoblaze:processor|arithmetic_process:arithmetic_group
first_operand[0] => addsub8:add_sub_module.first_operand[0]
first_operand[1] => addsub8:add_sub_module.first_operand[1]
first_operand[2] => addsub8:add_sub_module.first_operand[2]
first_operand[3] => addsub8:add_sub_module.first_operand[3]
first_operand[4] => addsub8:add_sub_module.first_operand[4]
first_operand[5] => addsub8:add_sub_module.first_operand[5]
first_operand[6] => addsub8:add_sub_module.first_operand[6]
first_operand[7] => addsub8:add_sub_module.first_operand[7]
second_operand[0] => addsub8:add_sub_module.second_operand[0]
second_operand[1] => addsub8:add_sub_module.second_operand[1]
second_operand[2] => addsub8:add_sub_module.second_operand[2]
second_operand[3] => addsub8:add_sub_module.second_operand[3]
second_operand[4] => addsub8:add_sub_module.second_operand[4]
second_operand[5] => addsub8:add_sub_module.second_operand[5]
second_operand[6] => addsub8:add_sub_module.second_operand[6]
second_operand[7] => addsub8:add_sub_module.second_operand[7]
carry_in => carry_in_bit~9.IN0
carry_in => carry_in_bit~6.IN0
carry_in => carry_in_bit~1.IN1
carry_in => carry_in_bit~3.IN0
code1 => addsub8:add_sub_module.subtract
code1 => modified_carry_out.IN1
code1 => carry_in_bit~5.IN0
code1 => carry_in_bit~2.IN0
code1 => carry_in_bit~0.IN0
code1 => carry_in_bit~8.IN0
code0 => carry_in_bit~8.IN1
code0 => carry_in_bit~2.IN1
code0 => carry_in_bit~0.IN1
code0 => carry_in_bit~5.IN1
Y[0] <= addsub8:add_sub_module.Y[0]
Y[1] <= addsub8:add_sub_module.Y[1]
Y[2] <= addsub8:add_sub_module.Y[2]
Y[3] <= addsub8:add_sub_module.Y[3]
Y[4] <= addsub8:add_sub_module.Y[4]
Y[5] <= addsub8:add_sub_module.Y[5]
Y[6] <= addsub8:add_sub_module.Y[6]
Y[7] <= addsub8:add_sub_module.Y[7]
carry_out <= carry_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => carry_out~reg0.CLK
clk => addsub8:add_sub_module.clk


|MAXII_PicoBlaze|picoblaze:processor|arithmetic_process:arithmetic_group|addsub8:add_sub_module
first_operand[0] => half_addsub~6.IN0
first_operand[0] => half_addsub~1.IN0
first_operand[0] => carry_chain[0].DATAA
first_operand[0] => half_addsub~9.IN0
first_operand[0] => half_addsub~3.IN0
first_operand[1] => half_addsub~16.IN0
first_operand[1] => half_addsub~11.IN0
first_operand[1] => carry_chain[1].DATAA
first_operand[1] => half_addsub~19.IN0
first_operand[1] => half_addsub~13.IN0
first_operand[2] => half_addsub~26.IN0
first_operand[2] => half_addsub~21.IN0
first_operand[2] => carry_chain[2].DATAA
first_operand[2] => half_addsub~29.IN0
first_operand[2] => half_addsub~23.IN0
first_operand[3] => half_addsub~36.IN0
first_operand[3] => half_addsub~31.IN0
first_operand[3] => carry_chain[3].DATAA
first_operand[3] => half_addsub~39.IN0
first_operand[3] => half_addsub~33.IN0
first_operand[4] => half_addsub~46.IN0
first_operand[4] => half_addsub~41.IN0
first_operand[4] => carry_chain[4].DATAA
first_operand[4] => half_addsub~49.IN0
first_operand[4] => half_addsub~43.IN0
first_operand[5] => half_addsub~56.IN0
first_operand[5] => half_addsub~51.IN0
first_operand[5] => carry_chain[5].DATAA
first_operand[5] => half_addsub~59.IN0
first_operand[5] => half_addsub~53.IN0
first_operand[6] => half_addsub~66.IN0
first_operand[6] => half_addsub~61.IN0
first_operand[6] => carry_chain[6].DATAA
first_operand[6] => half_addsub~69.IN0
first_operand[6] => half_addsub~63.IN0
first_operand[7] => half_addsub~76.IN0
first_operand[7] => half_addsub~71.IN1
first_operand[7] => carry_out~0.DATAA
first_operand[7] => half_addsub~79.IN0
first_operand[7] => half_addsub~73.IN0
second_operand[0] => half_addsub~8.IN1
second_operand[0] => half_addsub~0.IN1
second_operand[0] => half_addsub~5.IN1
second_operand[0] => half_addsub~2.IN1
second_operand[1] => half_addsub~18.IN1
second_operand[1] => half_addsub~10.IN1
second_operand[1] => half_addsub~15.IN1
second_operand[1] => half_addsub~12.IN1
second_operand[2] => half_addsub~28.IN1
second_operand[2] => half_addsub~20.IN1
second_operand[2] => half_addsub~25.IN1
second_operand[2] => half_addsub~22.IN1
second_operand[3] => half_addsub~38.IN1
second_operand[3] => half_addsub~30.IN1
second_operand[3] => half_addsub~35.IN1
second_operand[3] => half_addsub~32.IN1
second_operand[4] => half_addsub~48.IN1
second_operand[4] => half_addsub~40.IN1
second_operand[4] => half_addsub~45.IN1
second_operand[4] => half_addsub~42.IN1
second_operand[5] => half_addsub~58.IN1
second_operand[5] => half_addsub~50.IN1
second_operand[5] => half_addsub~55.IN1
second_operand[5] => half_addsub~52.IN1
second_operand[6] => half_addsub~68.IN1
second_operand[6] => half_addsub~60.IN1
second_operand[6] => half_addsub~65.IN1
second_operand[6] => half_addsub~62.IN1
second_operand[7] => half_addsub~78.IN0
second_operand[7] => half_addsub~70.IN0
second_operand[7] => half_addsub~75.IN0
second_operand[7] => half_addsub~72.IN0
carry_in => full_addsub[0].IN0
carry_in => carry_chain[0].DATAB
subtract => half_addsub~72.IN1
subtract => half_addsub~70.IN1
subtract => half_addsub~62.IN0
subtract => half_addsub~60.IN0
subtract => half_addsub~52.IN0
subtract => half_addsub~50.IN0
subtract => half_addsub~42.IN0
subtract => half_addsub~40.IN0
subtract => half_addsub~32.IN0
subtract => half_addsub~30.IN0
subtract => half_addsub~22.IN0
subtract => half_addsub~20.IN0
subtract => half_addsub~12.IN0
subtract => half_addsub~10.IN0
subtract => half_addsub~2.IN0
subtract => half_addsub~0.IN0
subtract => half_addsub~68.IN0
subtract => half_addsub~65.IN0
subtract => half_addsub~58.IN0
subtract => half_addsub~55.IN0
subtract => half_addsub~48.IN0
subtract => half_addsub~45.IN0
subtract => half_addsub~38.IN0
subtract => half_addsub~35.IN0
subtract => half_addsub~28.IN0
subtract => half_addsub~25.IN0
subtract => half_addsub~18.IN0
subtract => half_addsub~15.IN0
subtract => half_addsub~8.IN0
subtract => half_addsub~5.IN0
subtract => half_addsub~78.IN1
subtract => half_addsub~75.IN1
Y[0] <= Y[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Y[1] <= Y[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Y[2] <= Y[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Y[3] <= Y[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Y[4] <= Y[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Y[5] <= Y[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Y[6] <= Y[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Y[7] <= Y[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
carry_out <= carry_out~0.DB_MAX_OUTPUT_PORT_TYPE
clk => Y[0]~reg0.CLK
clk => Y[1]~reg0.CLK
clk => Y[2]~reg0.CLK
clk => Y[3]~reg0.CLK
clk => Y[4]~reg0.CLK
clk => Y[5]~reg0.CLK
clk => Y[6]~reg0.CLK
clk => Y[7]~reg0.CLK


|MAXII_PicoBlaze|picoblaze:processor|shift_rotate:shift_group
operand[0] => carry_bit~0.IN0
operand[0] => mux_output[1].DATAA
operand[0] => shift_in_bit~14.IN0
operand[0] => shift_in_bit~2.IN0
operand[1] => mux_output[0].DATAB
operand[1] => mux_output[2].DATAA
operand[2] => mux_output[1].DATAB
operand[2] => mux_output[3].DATAA
operand[3] => mux_output[2].DATAB
operand[3] => mux_output[4].DATAA
operand[4] => mux_output[3].DATAB
operand[4] => mux_output[5].DATAA
operand[5] => mux_output[4].DATAB
operand[5] => mux_output[6].DATAA
operand[6] => mux_output[5].DATAB
operand[6] => mux_output[7].DATAA
operand[7] => carry_bit~1.IN1
operand[7] => mux_output[6].DATAB
operand[7] => shift_in_bit~10.IN0
operand[7] => shift_in_bit~6.IN0
carry_in => shift_in_bit~18.IN1
inject_bit => shift_in_bit~0.IN0
shift_right => carry_bit~0.IN1
shift_right => mux_output[0].OUTPUTSELECT
shift_right => mux_output[1].OUTPUTSELECT
shift_right => mux_output[2].OUTPUTSELECT
shift_right => mux_output[3].OUTPUTSELECT
shift_right => mux_output[4].OUTPUTSELECT
shift_right => mux_output[5].OUTPUTSELECT
shift_right => mux_output[6].OUTPUTSELECT
shift_right => mux_output[7].OUTPUTSELECT
shift_right => shift_in_bit~8.IN0
shift_right => shift_in_bit~4.IN0
shift_right => carry_bit~1.IN0
shift_right => shift_in_bit~16.IN0
shift_right => shift_in_bit~12.IN0
code1 => shift_in_bit~10.IN1
code1 => shift_in_bit~2.IN1
code1 => shift_in_bit~0.IN1
code1 => shift_in_bit~18.IN0
code1 => shift_in_bit~14.IN1
code1 => shift_in_bit~6.IN1
code0 => shift_in_bit~15.IN0
code0 => shift_in_bit~7.IN0
code0 => shift_in_bit~1.IN1
code0 => shift_in_bit~19.IN0
code0 => shift_in_bit~11.IN0
code0 => shift_in_bit~3.IN0
Y[0] <= Y[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Y[1] <= Y[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Y[2] <= Y[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Y[3] <= Y[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Y[4] <= Y[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Y[5] <= Y[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Y[6] <= Y[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Y[7] <= Y[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
carry_out <= carry_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => Y[0]~reg0.CLK
clk => Y[1]~reg0.CLK
clk => Y[2]~reg0.CLK
clk => Y[3]~reg0.CLK
clk => Y[4]~reg0.CLK
clk => Y[5]~reg0.CLK
clk => Y[6]~reg0.CLK
clk => Y[7]~reg0.CLK
clk => carry_out~reg0.CLK


|MAXII_PicoBlaze|picoblaze:processor|logical_bus_processing:logical_group
first_operand[0] => combinatorial_logical_processing~4.IN1
first_operand[0] => combinatorial_logical_processing~2.IN1
first_operand[0] => combinatorial_logical_processing~0.IN1
first_operand[1] => combinatorial_logical_processing~9.IN1
first_operand[1] => combinatorial_logical_processing~7.IN1
first_operand[1] => combinatorial_logical_processing~5.IN1
first_operand[2] => combinatorial_logical_processing~14.IN1
first_operand[2] => combinatorial_logical_processing~12.IN1
first_operand[2] => combinatorial_logical_processing~10.IN1
first_operand[3] => combinatorial_logical_processing~19.IN1
first_operand[3] => combinatorial_logical_processing~17.IN1
first_operand[3] => combinatorial_logical_processing~15.IN1
first_operand[4] => combinatorial_logical_processing~24.IN1
first_operand[4] => combinatorial_logical_processing~22.IN1
first_operand[4] => combinatorial_logical_processing~20.IN1
first_operand[5] => combinatorial_logical_processing~29.IN1
first_operand[5] => combinatorial_logical_processing~27.IN1
first_operand[5] => combinatorial_logical_processing~25.IN1
first_operand[6] => combinatorial_logical_processing~34.IN1
first_operand[6] => combinatorial_logical_processing~32.IN1
first_operand[6] => combinatorial_logical_processing~30.IN1
first_operand[7] => combinatorial_logical_processing~42.IN1
first_operand[7] => combinatorial_logical_processing~39.IN1
first_operand[7] => combinatorial_logical_processing~36.IN1
second_operand[0] => combinatorial_logical_processing~4.IN0
second_operand[0] => combinatorial_logical_processing~2.IN0
second_operand[0] => combinatorial_logical_processing~1.DATAA
second_operand[0] => combinatorial_logical_processing~0.IN0
second_operand[1] => combinatorial_logical_processing~9.IN0
second_operand[1] => combinatorial_logical_processing~7.IN0
second_operand[1] => combinatorial_logical_processing~6.DATAA
second_operand[1] => combinatorial_logical_processing~5.IN0
second_operand[2] => combinatorial_logical_processing~14.IN0
second_operand[2] => combinatorial_logical_processing~12.IN0
second_operand[2] => combinatorial_logical_processing~11.DATAA
second_operand[2] => combinatorial_logical_processing~10.IN0
second_operand[3] => combinatorial_logical_processing~19.IN0
second_operand[3] => combinatorial_logical_processing~17.IN0
second_operand[3] => combinatorial_logical_processing~16.DATAA
second_operand[3] => combinatorial_logical_processing~15.IN0
second_operand[4] => combinatorial_logical_processing~24.IN0
second_operand[4] => combinatorial_logical_processing~22.IN0
second_operand[4] => combinatorial_logical_processing~21.DATAA
second_operand[4] => combinatorial_logical_processing~20.IN0
second_operand[5] => combinatorial_logical_processing~29.IN0
second_operand[5] => combinatorial_logical_processing~27.IN0
second_operand[5] => combinatorial_logical_processing~26.DATAA
second_operand[5] => combinatorial_logical_processing~25.IN0
second_operand[6] => combinatorial_logical_processing~34.IN0
second_operand[6] => combinatorial_logical_processing~32.IN0
second_operand[6] => combinatorial_logical_processing~31.DATAA
second_operand[6] => combinatorial_logical_processing~30.IN0
second_operand[7] => combinatorial_logical_processing~42.IN0
second_operand[7] => combinatorial_logical_processing~39.IN0
second_operand[7] => combinatorial_logical_processing~37.DATAA
second_operand[7] => combinatorial_logical_processing~36.IN0
code1 => combinatorial_logical_processing~41.IN0
code1 => combinatorial_logical_processing~38.IN0
code1 => combinatorial_logical_processing~35.IN0
code0 => combinatorial_logical_processing~41.IN1
code0 => combinatorial_logical_processing~35.IN1
code0 => combinatorial_logical_processing~38.IN1
Y[0] <= Y[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Y[1] <= Y[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Y[2] <= Y[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Y[3] <= Y[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Y[4] <= Y[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Y[5] <= Y[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Y[6] <= Y[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Y[7] <= Y[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => Y[0]~reg0.CLK
clk => Y[1]~reg0.CLK
clk => Y[2]~reg0.CLK
clk => Y[3]~reg0.CLK
clk => Y[4]~reg0.CLK
clk => Y[5]~reg0.CLK
clk => Y[6]~reg0.CLK
clk => Y[7]~reg0.CLK


|MAXII_PicoBlaze|picoblaze:processor|T_state_and_Reset:basic_control
reset_input => reset_delay1.DATAIN
reset_input => reset_delay2~0.IN1
internal_reset <= reset_delay2.DB_MAX_OUTPUT_PORT_TYPE
T_state <= internal_T_state.DB_MAX_OUTPUT_PORT_TYPE
clk => reset_delay1.CLK
clk => reset_delay2.CLK
clk => internal_T_state.CLK


|MAXII_PicoBlaze|picoblaze:processor|register_and_flag_enable:reg_and_flag_enables
i_logical => arith_or_logical_decode.IN0
i_arithmetic => arith_or_logical_decode.IN1
i_shift_rotate => returni_or_shift_decode.IN0
i_shift_rotate => reg_instruction_decode~0.IN0
i_returni => returni_or_shift_decode.IN1
i_input => reg_instruction_decode~1.IN1
active_interrupt => reg_instruction_decode.IN1
T_state => flag_enable~6.IN0
T_state => flag_enable~3.IN0
T_state => flag_enable~1.IN0
T_state => register_enable~0.IN1
register_enable <= register_enable~0.DB_MAX_OUTPUT_PORT_TYPE
flag_enable <= flag_enable~7.DB_MAX_OUTPUT_PORT_TYPE
clk => register_write_valid.CLK
clk => arith_or_logical_valid.CLK
clk => returni_or_shift_valid.CLK


|MAXII_PicoBlaze|picoblaze:processor|carry_flag_logic:carry_logic
add_sub => next_carry_flag~3.IN1
add_sub => carry_status~1.IN0
shift => next_carry_flag~3.IN0
shift => carry_status~0.IN0
returni => next_carry_flag~0.IN0
shift_carry => carry_status~0.IN1
add_sub_carry => carry_status~1.IN1
shadow_carry => next_carry_flag~1.IN0
shadow_carry => next_carry_flag~0.IN1
reset => carry_flag~1.OUTPUTSELECT
flag_enable => carry_flag~0.OUTPUTSELECT
carry_flag <= carry_flag~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => carry_flag~reg0.CLK


|MAXII_PicoBlaze|picoblaze:processor|zero_flag_logic:zero_logic
data[0] => lower_zero.IN1
data[1] => lower_zero~1.IN1
data[2] => lower_zero~0.IN1
data[3] => lower_zero~0.IN0
data[4] => upper_zero.IN1
data[5] => upper_zero~1.IN1
data[6] => upper_zero~0.IN1
data[7] => upper_zero~0.IN0
returni => next_zero_flag~1.IN0
returni => next_zero_flag~0.IN0
shadow_zero => next_zero_flag~1.IN1
reset => zero_flag~1.OUTPUTSELECT
flag_enable => zero_flag~0.OUTPUTSELECT
zero_flag <= zero_flag~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => zero_flag~reg0.CLK


|MAXII_PicoBlaze|picoblaze:processor|program_counter:prog_count
i_jump => select_load_value.IN0
i_call => select_load_value.IN1
i_return => count_value~7.OUTPUTSELECT
i_return => count_value~6.OUTPUTSELECT
i_return => count_value~5.OUTPUTSELECT
i_return => count_value~4.OUTPUTSELECT
i_return => count_value~3.OUTPUTSELECT
i_return => count_value~2.OUTPUTSELECT
i_return => count_value~1.OUTPUTSELECT
i_return => count_value~0.OUTPUTSELECT
i_return => move_group~0.IN1
i_returni => move_group.IN1
conditional => normal_count~1.IN1
low_instruction[0] => selected_load_value[0].DATAB
low_instruction[1] => selected_load_value[1].DATAB
low_instruction[2] => selected_load_value[2].DATAB
low_instruction[3] => selected_load_value[3].DATAB
low_instruction[4] => selected_load_value[4].DATAB
low_instruction[5] => selected_load_value[5].DATAB
low_instruction[6] => selected_load_value[6].DATAB
low_instruction[7] => selected_load_value[7].DATAB
stack_value[0] => selected_load_value[0].DATAA
stack_value[1] => selected_load_value[1].DATAA
stack_value[2] => selected_load_value[2].DATAA
stack_value[3] => selected_load_value[3].DATAA
stack_value[4] => selected_load_value[4].DATAA
stack_value[5] => selected_load_value[5].DATAA
stack_value[6] => selected_load_value[6].DATAA
stack_value[7] => selected_load_value[7].DATAA
flag_condition_met => normal_count~0.IN1
T_state => count_value~23.OUTPUTSELECT
T_state => count_value~22.OUTPUTSELECT
T_state => count_value~21.OUTPUTSELECT
T_state => count_value~20.OUTPUTSELECT
T_state => count_value~19.OUTPUTSELECT
T_state => count_value~18.OUTPUTSELECT
T_state => count_value~17.OUTPUTSELECT
T_state => count_value~16.OUTPUTSELECT
reset => count_value~31.OUTPUTSELECT
reset => count_value~30.OUTPUTSELECT
reset => count_value~29.OUTPUTSELECT
reset => count_value~28.OUTPUTSELECT
reset => count_value~27.OUTPUTSELECT
reset => count_value~26.OUTPUTSELECT
reset => count_value~25.OUTPUTSELECT
reset => count_value~24.OUTPUTSELECT
interrupt => count_value~39.OUTPUTSELECT
interrupt => count_value~38.OUTPUTSELECT
interrupt => count_value~37.OUTPUTSELECT
interrupt => count_value~36.OUTPUTSELECT
interrupt => count_value~35.OUTPUTSELECT
interrupt => count_value~34.OUTPUTSELECT
interrupt => count_value~33.OUTPUTSELECT
interrupt => count_value~32.OUTPUTSELECT
program_count[0] <= count_value[0].DB_MAX_OUTPUT_PORT_TYPE
program_count[1] <= count_value[1].DB_MAX_OUTPUT_PORT_TYPE
program_count[2] <= count_value[2].DB_MAX_OUTPUT_PORT_TYPE
program_count[3] <= count_value[3].DB_MAX_OUTPUT_PORT_TYPE
program_count[4] <= count_value[4].DB_MAX_OUTPUT_PORT_TYPE
program_count[5] <= count_value[5].DB_MAX_OUTPUT_PORT_TYPE
program_count[6] <= count_value[6].DB_MAX_OUTPUT_PORT_TYPE
program_count[7] <= count_value[7].DB_MAX_OUTPUT_PORT_TYPE
clk => count_value[7].CLK
clk => count_value[6].CLK
clk => count_value[5].CLK
clk => count_value[4].CLK
clk => count_value[3].CLK
clk => count_value[2].CLK
clk => count_value[1].CLK
clk => count_value[0].CLK


|MAXII_PicoBlaze|picoblaze:processor|register_bank:data_registers
we => ram_Nx1:bus_width_loop:7:data_register_bit.we
we => ram_Nx1:bus_width_loop:6:data_register_bit.we
we => ram_Nx1:bus_width_loop:5:data_register_bit.we
we => ram_Nx1:bus_width_loop:4:data_register_bit.we
we => ram_Nx1:bus_width_loop:3:data_register_bit.we
we => ram_Nx1:bus_width_loop:2:data_register_bit.we
we => ram_Nx1:bus_width_loop:1:data_register_bit.we
we => ram_Nx1:bus_width_loop:0:data_register_bit.we
d_bus[0] => ram_Nx1:bus_width_loop:0:data_register_bit.d
d_bus[1] => ram_Nx1:bus_width_loop:1:data_register_bit.d
d_bus[2] => ram_Nx1:bus_width_loop:2:data_register_bit.d
d_bus[3] => ram_Nx1:bus_width_loop:3:data_register_bit.d
d_bus[4] => ram_Nx1:bus_width_loop:4:data_register_bit.d
d_bus[5] => ram_Nx1:bus_width_loop:5:data_register_bit.d
d_bus[6] => ram_Nx1:bus_width_loop:6:data_register_bit.d
d_bus[7] => ram_Nx1:bus_width_loop:7:data_register_bit.d
wclk => ram_Nx1:bus_width_loop:7:data_register_bit.wclk
wclk => ram_Nx1:bus_width_loop:6:data_register_bit.wclk
wclk => ram_Nx1:bus_width_loop:5:data_register_bit.wclk
wclk => ram_Nx1:bus_width_loop:4:data_register_bit.wclk
wclk => ram_Nx1:bus_width_loop:3:data_register_bit.wclk
wclk => ram_Nx1:bus_width_loop:2:data_register_bit.wclk
wclk => ram_Nx1:bus_width_loop:1:data_register_bit.wclk
wclk => ram_Nx1:bus_width_loop:0:data_register_bit.wclk
a[0] => ram_Nx1:bus_width_loop:7:data_register_bit.a[0]
a[0] => ram_Nx1:bus_width_loop:6:data_register_bit.a[0]
a[0] => ram_Nx1:bus_width_loop:5:data_register_bit.a[0]
a[0] => ram_Nx1:bus_width_loop:4:data_register_bit.a[0]
a[0] => ram_Nx1:bus_width_loop:3:data_register_bit.a[0]
a[0] => ram_Nx1:bus_width_loop:2:data_register_bit.a[0]
a[0] => ram_Nx1:bus_width_loop:1:data_register_bit.a[0]
a[0] => ram_Nx1:bus_width_loop:0:data_register_bit.a[0]
a[1] => ram_Nx1:bus_width_loop:7:data_register_bit.a[1]
a[1] => ram_Nx1:bus_width_loop:6:data_register_bit.a[1]
a[1] => ram_Nx1:bus_width_loop:5:data_register_bit.a[1]
a[1] => ram_Nx1:bus_width_loop:4:data_register_bit.a[1]
a[1] => ram_Nx1:bus_width_loop:3:data_register_bit.a[1]
a[1] => ram_Nx1:bus_width_loop:2:data_register_bit.a[1]
a[1] => ram_Nx1:bus_width_loop:1:data_register_bit.a[1]
a[1] => ram_Nx1:bus_width_loop:0:data_register_bit.a[1]
a[2] => ram_Nx1:bus_width_loop:7:data_register_bit.a[2]
a[2] => ram_Nx1:bus_width_loop:6:data_register_bit.a[2]
a[2] => ram_Nx1:bus_width_loop:5:data_register_bit.a[2]
a[2] => ram_Nx1:bus_width_loop:4:data_register_bit.a[2]
a[2] => ram_Nx1:bus_width_loop:3:data_register_bit.a[2]
a[2] => ram_Nx1:bus_width_loop:2:data_register_bit.a[2]
a[2] => ram_Nx1:bus_width_loop:1:data_register_bit.a[2]
a[2] => ram_Nx1:bus_width_loop:0:data_register_bit.a[2]
dpra[0] => ram_Nx1:bus_width_loop:7:data_register_bit.dpra[0]
dpra[0] => ram_Nx1:bus_width_loop:6:data_register_bit.dpra[0]
dpra[0] => ram_Nx1:bus_width_loop:5:data_register_bit.dpra[0]
dpra[0] => ram_Nx1:bus_width_loop:4:data_register_bit.dpra[0]
dpra[0] => ram_Nx1:bus_width_loop:3:data_register_bit.dpra[0]
dpra[0] => ram_Nx1:bus_width_loop:2:data_register_bit.dpra[0]
dpra[0] => ram_Nx1:bus_width_loop:1:data_register_bit.dpra[0]
dpra[0] => ram_Nx1:bus_width_loop:0:data_register_bit.dpra[0]
dpra[1] => ram_Nx1:bus_width_loop:7:data_register_bit.dpra[1]
dpra[1] => ram_Nx1:bus_width_loop:6:data_register_bit.dpra[1]
dpra[1] => ram_Nx1:bus_width_loop:5:data_register_bit.dpra[1]
dpra[1] => ram_Nx1:bus_width_loop:4:data_register_bit.dpra[1]
dpra[1] => ram_Nx1:bus_width_loop:3:data_register_bit.dpra[1]
dpra[1] => ram_Nx1:bus_width_loop:2:data_register_bit.dpra[1]
dpra[1] => ram_Nx1:bus_width_loop:1:data_register_bit.dpra[1]
dpra[1] => ram_Nx1:bus_width_loop:0:data_register_bit.dpra[1]
dpra[2] => ram_Nx1:bus_width_loop:7:data_register_bit.dpra[2]
dpra[2] => ram_Nx1:bus_width_loop:6:data_register_bit.dpra[2]
dpra[2] => ram_Nx1:bus_width_loop:5:data_register_bit.dpra[2]
dpra[2] => ram_Nx1:bus_width_loop:4:data_register_bit.dpra[2]
dpra[2] => ram_Nx1:bus_width_loop:3:data_register_bit.dpra[2]
dpra[2] => ram_Nx1:bus_width_loop:2:data_register_bit.dpra[2]
dpra[2] => ram_Nx1:bus_width_loop:1:data_register_bit.dpra[2]
dpra[2] => ram_Nx1:bus_width_loop:0:data_register_bit.dpra[2]
spo_bus[0] <= ram_Nx1:bus_width_loop:0:data_register_bit.spo
spo_bus[1] <= ram_Nx1:bus_width_loop:1:data_register_bit.spo
spo_bus[2] <= ram_Nx1:bus_width_loop:2:data_register_bit.spo
spo_bus[3] <= ram_Nx1:bus_width_loop:3:data_register_bit.spo
spo_bus[4] <= ram_Nx1:bus_width_loop:4:data_register_bit.spo
spo_bus[5] <= ram_Nx1:bus_width_loop:5:data_register_bit.spo
spo_bus[6] <= ram_Nx1:bus_width_loop:6:data_register_bit.spo
spo_bus[7] <= ram_Nx1:bus_width_loop:7:data_register_bit.spo
dpo_bus[0] <= ram_Nx1:bus_width_loop:0:data_register_bit.dpo
dpo_bus[1] <= ram_Nx1:bus_width_loop:1:data_register_bit.dpo
dpo_bus[2] <= ram_Nx1:bus_width_loop:2:data_register_bit.dpo
dpo_bus[3] <= ram_Nx1:bus_width_loop:3:data_register_bit.dpo
dpo_bus[4] <= ram_Nx1:bus_width_loop:4:data_register_bit.dpo
dpo_bus[5] <= ram_Nx1:bus_width_loop:5:data_register_bit.dpo
dpo_bus[6] <= ram_Nx1:bus_width_loop:6:data_register_bit.dpo
dpo_bus[7] <= ram_Nx1:bus_width_loop:7:data_register_bit.dpo


|MAXII_PicoBlaze|picoblaze:processor|register_bank:data_registers|ram_Nx1:\bus_width_loop:0:data_register_bit
we => rambit[0].ENA
we => rambit[1].ENA
we => rambit[2].ENA
we => rambit[3].ENA
we => rambit[4].ENA
we => rambit[5].ENA
we => rambit[6].ENA
we => rambit[7].ENA
d => rambit~7.DATAB
d => rambit~6.DATAB
d => rambit~5.DATAB
d => rambit~4.DATAB
d => rambit~3.DATAB
d => rambit~2.DATAB
d => rambit~1.DATAB
d => rambit~0.DATAB
wclk => rambit[7].CLK
wclk => rambit[6].CLK
wclk => rambit[5].CLK
wclk => rambit[4].CLK
wclk => rambit[3].CLK
wclk => rambit[2].CLK
wclk => rambit[1].CLK
wclk => rambit[0].CLK
a[0] => Mux1.IN2
a[0] => Decoder0.IN2
a[1] => Mux1.IN1
a[1] => Decoder0.IN1
a[2] => Mux1.IN0
a[2] => Decoder0.IN0
dpra[0] => Mux0.IN2
dpra[1] => Mux0.IN1
dpra[2] => Mux0.IN0
spo <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
dpo <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|MAXII_PicoBlaze|picoblaze:processor|register_bank:data_registers|ram_Nx1:\bus_width_loop:1:data_register_bit
we => rambit[0].ENA
we => rambit[1].ENA
we => rambit[2].ENA
we => rambit[3].ENA
we => rambit[4].ENA
we => rambit[5].ENA
we => rambit[6].ENA
we => rambit[7].ENA
d => rambit~7.DATAB
d => rambit~6.DATAB
d => rambit~5.DATAB
d => rambit~4.DATAB
d => rambit~3.DATAB
d => rambit~2.DATAB
d => rambit~1.DATAB
d => rambit~0.DATAB
wclk => rambit[7].CLK
wclk => rambit[6].CLK
wclk => rambit[5].CLK
wclk => rambit[4].CLK
wclk => rambit[3].CLK
wclk => rambit[2].CLK
wclk => rambit[1].CLK
wclk => rambit[0].CLK
a[0] => Mux1.IN2
a[0] => Decoder0.IN2
a[1] => Mux1.IN1
a[1] => Decoder0.IN1
a[2] => Mux1.IN0
a[2] => Decoder0.IN0
dpra[0] => Mux0.IN2
dpra[1] => Mux0.IN1
dpra[2] => Mux0.IN0
spo <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
dpo <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|MAXII_PicoBlaze|picoblaze:processor|register_bank:data_registers|ram_Nx1:\bus_width_loop:2:data_register_bit
we => rambit[0].ENA
we => rambit[1].ENA
we => rambit[2].ENA
we => rambit[3].ENA
we => rambit[4].ENA
we => rambit[5].ENA
we => rambit[6].ENA
we => rambit[7].ENA
d => rambit~7.DATAB
d => rambit~6.DATAB
d => rambit~5.DATAB
d => rambit~4.DATAB
d => rambit~3.DATAB
d => rambit~2.DATAB
d => rambit~1.DATAB
d => rambit~0.DATAB
wclk => rambit[7].CLK
wclk => rambit[6].CLK
wclk => rambit[5].CLK
wclk => rambit[4].CLK
wclk => rambit[3].CLK
wclk => rambit[2].CLK
wclk => rambit[1].CLK
wclk => rambit[0].CLK
a[0] => Mux1.IN2
a[0] => Decoder0.IN2
a[1] => Mux1.IN1
a[1] => Decoder0.IN1
a[2] => Mux1.IN0
a[2] => Decoder0.IN0
dpra[0] => Mux0.IN2
dpra[1] => Mux0.IN1
dpra[2] => Mux0.IN0
spo <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
dpo <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|MAXII_PicoBlaze|picoblaze:processor|register_bank:data_registers|ram_Nx1:\bus_width_loop:3:data_register_bit
we => rambit[0].ENA
we => rambit[1].ENA
we => rambit[2].ENA
we => rambit[3].ENA
we => rambit[4].ENA
we => rambit[5].ENA
we => rambit[6].ENA
we => rambit[7].ENA
d => rambit~7.DATAB
d => rambit~6.DATAB
d => rambit~5.DATAB
d => rambit~4.DATAB
d => rambit~3.DATAB
d => rambit~2.DATAB
d => rambit~1.DATAB
d => rambit~0.DATAB
wclk => rambit[7].CLK
wclk => rambit[6].CLK
wclk => rambit[5].CLK
wclk => rambit[4].CLK
wclk => rambit[3].CLK
wclk => rambit[2].CLK
wclk => rambit[1].CLK
wclk => rambit[0].CLK
a[0] => Mux1.IN2
a[0] => Decoder0.IN2
a[1] => Mux1.IN1
a[1] => Decoder0.IN1
a[2] => Mux1.IN0
a[2] => Decoder0.IN0
dpra[0] => Mux0.IN2
dpra[1] => Mux0.IN1
dpra[2] => Mux0.IN0
spo <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
dpo <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|MAXII_PicoBlaze|picoblaze:processor|register_bank:data_registers|ram_Nx1:\bus_width_loop:4:data_register_bit
we => rambit[0].ENA
we => rambit[1].ENA
we => rambit[2].ENA
we => rambit[3].ENA
we => rambit[4].ENA
we => rambit[5].ENA
we => rambit[6].ENA
we => rambit[7].ENA
d => rambit~7.DATAB
d => rambit~6.DATAB
d => rambit~5.DATAB
d => rambit~4.DATAB
d => rambit~3.DATAB
d => rambit~2.DATAB
d => rambit~1.DATAB
d => rambit~0.DATAB
wclk => rambit[7].CLK
wclk => rambit[6].CLK
wclk => rambit[5].CLK
wclk => rambit[4].CLK
wclk => rambit[3].CLK
wclk => rambit[2].CLK
wclk => rambit[1].CLK
wclk => rambit[0].CLK
a[0] => Mux1.IN2
a[0] => Decoder0.IN2
a[1] => Mux1.IN1
a[1] => Decoder0.IN1
a[2] => Mux1.IN0
a[2] => Decoder0.IN0
dpra[0] => Mux0.IN2
dpra[1] => Mux0.IN1
dpra[2] => Mux0.IN0
spo <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
dpo <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|MAXII_PicoBlaze|picoblaze:processor|register_bank:data_registers|ram_Nx1:\bus_width_loop:5:data_register_bit
we => rambit[0].ENA
we => rambit[1].ENA
we => rambit[2].ENA
we => rambit[3].ENA
we => rambit[4].ENA
we => rambit[5].ENA
we => rambit[6].ENA
we => rambit[7].ENA
d => rambit~7.DATAB
d => rambit~6.DATAB
d => rambit~5.DATAB
d => rambit~4.DATAB
d => rambit~3.DATAB
d => rambit~2.DATAB
d => rambit~1.DATAB
d => rambit~0.DATAB
wclk => rambit[7].CLK
wclk => rambit[6].CLK
wclk => rambit[5].CLK
wclk => rambit[4].CLK
wclk => rambit[3].CLK
wclk => rambit[2].CLK
wclk => rambit[1].CLK
wclk => rambit[0].CLK
a[0] => Mux1.IN2
a[0] => Decoder0.IN2
a[1] => Mux1.IN1
a[1] => Decoder0.IN1
a[2] => Mux1.IN0
a[2] => Decoder0.IN0
dpra[0] => Mux0.IN2
dpra[1] => Mux0.IN1
dpra[2] => Mux0.IN0
spo <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
dpo <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|MAXII_PicoBlaze|picoblaze:processor|register_bank:data_registers|ram_Nx1:\bus_width_loop:6:data_register_bit
we => rambit[0].ENA
we => rambit[1].ENA
we => rambit[2].ENA
we => rambit[3].ENA
we => rambit[4].ENA
we => rambit[5].ENA
we => rambit[6].ENA
we => rambit[7].ENA
d => rambit~7.DATAB
d => rambit~6.DATAB
d => rambit~5.DATAB
d => rambit~4.DATAB
d => rambit~3.DATAB
d => rambit~2.DATAB
d => rambit~1.DATAB
d => rambit~0.DATAB
wclk => rambit[7].CLK
wclk => rambit[6].CLK
wclk => rambit[5].CLK
wclk => rambit[4].CLK
wclk => rambit[3].CLK
wclk => rambit[2].CLK
wclk => rambit[1].CLK
wclk => rambit[0].CLK
a[0] => Mux1.IN2
a[0] => Decoder0.IN2
a[1] => Mux1.IN1
a[1] => Decoder0.IN1
a[2] => Mux1.IN0
a[2] => Decoder0.IN0
dpra[0] => Mux0.IN2
dpra[1] => Mux0.IN1
dpra[2] => Mux0.IN0
spo <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
dpo <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|MAXII_PicoBlaze|picoblaze:processor|register_bank:data_registers|ram_Nx1:\bus_width_loop:7:data_register_bit
we => rambit[0].ENA
we => rambit[1].ENA
we => rambit[2].ENA
we => rambit[3].ENA
we => rambit[4].ENA
we => rambit[5].ENA
we => rambit[6].ENA
we => rambit[7].ENA
d => rambit~7.DATAB
d => rambit~6.DATAB
d => rambit~5.DATAB
d => rambit~4.DATAB
d => rambit~3.DATAB
d => rambit~2.DATAB
d => rambit~1.DATAB
d => rambit~0.DATAB
wclk => rambit[7].CLK
wclk => rambit[6].CLK
wclk => rambit[5].CLK
wclk => rambit[4].CLK
wclk => rambit[3].CLK
wclk => rambit[2].CLK
wclk => rambit[1].CLK
wclk => rambit[0].CLK
a[0] => Mux1.IN2
a[0] => Decoder0.IN2
a[1] => Mux1.IN1
a[1] => Decoder0.IN1
a[2] => Mux1.IN0
a[2] => Decoder0.IN0
dpra[0] => Mux0.IN2
dpra[1] => Mux0.IN1
dpra[2] => Mux0.IN0
spo <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
dpo <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|MAXII_PicoBlaze|picoblaze:processor|stack_ram:stack_memory
Din[0] => ram_x1s:bus_width_loop:0:stack_ram_bit.d
Din[1] => ram_x1s:bus_width_loop:1:stack_ram_bit.d
Din[2] => ram_x1s:bus_width_loop:2:stack_ram_bit.d
Din[3] => ram_x1s:bus_width_loop:3:stack_ram_bit.d
Din[4] => ram_x1s:bus_width_loop:4:stack_ram_bit.d
Din[5] => ram_x1s:bus_width_loop:5:stack_ram_bit.d
Din[6] => ram_x1s:bus_width_loop:6:stack_ram_bit.d
Din[7] => ram_x1s:bus_width_loop:7:stack_ram_bit.d
Dout[0] <= Dout[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Dout[1] <= Dout[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Dout[2] <= Dout[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Dout[3] <= Dout[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Dout[4] <= Dout[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Dout[5] <= Dout[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Dout[6] <= Dout[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Dout[7] <= Dout[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[0] => ram_x1s:bus_width_loop:7:stack_ram_bit.a[0]
addr[0] => ram_x1s:bus_width_loop:6:stack_ram_bit.a[0]
addr[0] => ram_x1s:bus_width_loop:5:stack_ram_bit.a[0]
addr[0] => ram_x1s:bus_width_loop:4:stack_ram_bit.a[0]
addr[0] => ram_x1s:bus_width_loop:3:stack_ram_bit.a[0]
addr[0] => ram_x1s:bus_width_loop:2:stack_ram_bit.a[0]
addr[0] => ram_x1s:bus_width_loop:1:stack_ram_bit.a[0]
addr[0] => ram_x1s:bus_width_loop:0:stack_ram_bit.a[0]
addr[1] => ram_x1s:bus_width_loop:7:stack_ram_bit.a[1]
addr[1] => ram_x1s:bus_width_loop:6:stack_ram_bit.a[1]
addr[1] => ram_x1s:bus_width_loop:5:stack_ram_bit.a[1]
addr[1] => ram_x1s:bus_width_loop:4:stack_ram_bit.a[1]
addr[1] => ram_x1s:bus_width_loop:3:stack_ram_bit.a[1]
addr[1] => ram_x1s:bus_width_loop:2:stack_ram_bit.a[1]
addr[1] => ram_x1s:bus_width_loop:1:stack_ram_bit.a[1]
addr[1] => ram_x1s:bus_width_loop:0:stack_ram_bit.a[1]
write_bar => ram_x1s:bus_width_loop:7:stack_ram_bit.we
write_bar => ram_x1s:bus_width_loop:6:stack_ram_bit.we
write_bar => ram_x1s:bus_width_loop:5:stack_ram_bit.we
write_bar => ram_x1s:bus_width_loop:4:stack_ram_bit.we
write_bar => ram_x1s:bus_width_loop:3:stack_ram_bit.we
write_bar => ram_x1s:bus_width_loop:2:stack_ram_bit.we
write_bar => ram_x1s:bus_width_loop:1:stack_ram_bit.we
write_bar => ram_x1s:bus_width_loop:0:stack_ram_bit.we
clk => ram_x1s:bus_width_loop:7:stack_ram_bit.wclk
clk => ram_x1s:bus_width_loop:6:stack_ram_bit.wclk
clk => ram_x1s:bus_width_loop:5:stack_ram_bit.wclk
clk => ram_x1s:bus_width_loop:4:stack_ram_bit.wclk
clk => ram_x1s:bus_width_loop:3:stack_ram_bit.wclk
clk => ram_x1s:bus_width_loop:2:stack_ram_bit.wclk
clk => ram_x1s:bus_width_loop:1:stack_ram_bit.wclk
clk => Dout[0]~reg0.CLK
clk => Dout[1]~reg0.CLK
clk => Dout[2]~reg0.CLK
clk => Dout[3]~reg0.CLK
clk => Dout[4]~reg0.CLK
clk => Dout[5]~reg0.CLK
clk => Dout[6]~reg0.CLK
clk => Dout[7]~reg0.CLK
clk => ram_x1s:bus_width_loop:0:stack_ram_bit.wclk


|MAXII_PicoBlaze|picoblaze:processor|stack_ram:stack_memory|ram_x1s:\bus_width_loop:0:stack_ram_bit
d => rambit~3.DATAB
d => rambit~2.DATAB
d => rambit~1.DATAB
d => rambit~0.DATAB
we => rambit[0].ENA
we => rambit[1].ENA
we => rambit[2].ENA
we => rambit[3].ENA
wclk => rambit[3].CLK
wclk => rambit[2].CLK
wclk => rambit[1].CLK
wclk => rambit[0].CLK
a[0] => Mux0.IN1
a[0] => Decoder0.IN1
a[1] => Mux0.IN0
a[1] => Decoder0.IN0
o <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|MAXII_PicoBlaze|picoblaze:processor|stack_ram:stack_memory|ram_x1s:\bus_width_loop:1:stack_ram_bit
d => rambit~3.DATAB
d => rambit~2.DATAB
d => rambit~1.DATAB
d => rambit~0.DATAB
we => rambit[0].ENA
we => rambit[1].ENA
we => rambit[2].ENA
we => rambit[3].ENA
wclk => rambit[3].CLK
wclk => rambit[2].CLK
wclk => rambit[1].CLK
wclk => rambit[0].CLK
a[0] => Mux0.IN1
a[0] => Decoder0.IN1
a[1] => Mux0.IN0
a[1] => Decoder0.IN0
o <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|MAXII_PicoBlaze|picoblaze:processor|stack_ram:stack_memory|ram_x1s:\bus_width_loop:2:stack_ram_bit
d => rambit~3.DATAB
d => rambit~2.DATAB
d => rambit~1.DATAB
d => rambit~0.DATAB
we => rambit[0].ENA
we => rambit[1].ENA
we => rambit[2].ENA
we => rambit[3].ENA
wclk => rambit[3].CLK
wclk => rambit[2].CLK
wclk => rambit[1].CLK
wclk => rambit[0].CLK
a[0] => Mux0.IN1
a[0] => Decoder0.IN1
a[1] => Mux0.IN0
a[1] => Decoder0.IN0
o <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|MAXII_PicoBlaze|picoblaze:processor|stack_ram:stack_memory|ram_x1s:\bus_width_loop:3:stack_ram_bit
d => rambit~3.DATAB
d => rambit~2.DATAB
d => rambit~1.DATAB
d => rambit~0.DATAB
we => rambit[0].ENA
we => rambit[1].ENA
we => rambit[2].ENA
we => rambit[3].ENA
wclk => rambit[3].CLK
wclk => rambit[2].CLK
wclk => rambit[1].CLK
wclk => rambit[0].CLK
a[0] => Mux0.IN1
a[0] => Decoder0.IN1
a[1] => Mux0.IN0
a[1] => Decoder0.IN0
o <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|MAXII_PicoBlaze|picoblaze:processor|stack_ram:stack_memory|ram_x1s:\bus_width_loop:4:stack_ram_bit
d => rambit~3.DATAB
d => rambit~2.DATAB
d => rambit~1.DATAB
d => rambit~0.DATAB
we => rambit[0].ENA
we => rambit[1].ENA
we => rambit[2].ENA
we => rambit[3].ENA
wclk => rambit[3].CLK
wclk => rambit[2].CLK
wclk => rambit[1].CLK
wclk => rambit[0].CLK
a[0] => Mux0.IN1
a[0] => Decoder0.IN1
a[1] => Mux0.IN0
a[1] => Decoder0.IN0
o <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|MAXII_PicoBlaze|picoblaze:processor|stack_ram:stack_memory|ram_x1s:\bus_width_loop:5:stack_ram_bit
d => rambit~3.DATAB
d => rambit~2.DATAB
d => rambit~1.DATAB
d => rambit~0.DATAB
we => rambit[0].ENA
we => rambit[1].ENA
we => rambit[2].ENA
we => rambit[3].ENA
wclk => rambit[3].CLK
wclk => rambit[2].CLK
wclk => rambit[1].CLK
wclk => rambit[0].CLK
a[0] => Mux0.IN1
a[0] => Decoder0.IN1
a[1] => Mux0.IN0
a[1] => Decoder0.IN0
o <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|MAXII_PicoBlaze|picoblaze:processor|stack_ram:stack_memory|ram_x1s:\bus_width_loop:6:stack_ram_bit
d => rambit~3.DATAB
d => rambit~2.DATAB
d => rambit~1.DATAB
d => rambit~0.DATAB
we => rambit[0].ENA
we => rambit[1].ENA
we => rambit[2].ENA
we => rambit[3].ENA
wclk => rambit[3].CLK
wclk => rambit[2].CLK
wclk => rambit[1].CLK
wclk => rambit[0].CLK
a[0] => Mux0.IN1
a[0] => Decoder0.IN1
a[1] => Mux0.IN0
a[1] => Decoder0.IN0
o <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|MAXII_PicoBlaze|picoblaze:processor|stack_ram:stack_memory|ram_x1s:\bus_width_loop:7:stack_ram_bit
d => rambit~3.DATAB
d => rambit~2.DATAB
d => rambit~1.DATAB
d => rambit~0.DATAB
we => rambit[0].ENA
we => rambit[1].ENA
we => rambit[2].ENA
we => rambit[3].ENA
wclk => rambit[3].CLK
wclk => rambit[2].CLK
wclk => rambit[1].CLK
wclk => rambit[0].CLK
a[0] => Mux0.IN1
a[0] => Decoder0.IN1
a[1] => Mux0.IN0
a[1] => Decoder0.IN0
o <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|MAXII_PicoBlaze|picoblaze:processor|stack_counter:stack_control
i_call => half_count~14.IN1
i_call => half_count~11.IN1
i_call => push_or_pop_type~0.IN0
i_call => half_count~18.IN0
i_return => push_or_pop_type~0.IN1
i_returni => push_or_pop_type.IN1
conditional => valid_to_move.IN0
T_state => half_count~21.IN1
T_state => half_count~10.IN1
T_state => half_count~7.IN1
T_state => half_count~4.IN0
T_state => half_count~1.IN1
T_state => half_count~18.IN1
T_state => half_count~15.IN0
T_state => half_count~12.IN0
flag_condition_met => valid_to_move.IN1
active_interrupt => count_value[0].ENA
active_interrupt => count_value[1].ENA
reset => count_value[0].ACLR
reset => count_value[1].ACLR
stack_count[0] <= count_value[0].DB_MAX_OUTPUT_PORT_TYPE
stack_count[1] <= count_value[1].DB_MAX_OUTPUT_PORT_TYPE
clk => count_value[0].CLK
clk => count_value[1].CLK


|MAXII_PicoBlaze|picoblaze:processor|interrupt_capture:get_interrupt
interrupt => clean_interrupt~0.DATAA
T_state => interrupt_pulse.IN1
reset => active_interrupt_pulse~0.OUTPUTSELECT
reset => clean_interrupt~0.OUTPUTSELECT
interrupt_enable => interrupt_pulse~0.IN1
active_interrupt <= active_interrupt_pulse.DB_MAX_OUTPUT_PORT_TYPE
clk => clean_interrupt.CLK
clk => active_interrupt_pulse.CLK


|MAXII_PicoBlaze|picoblaze:processor|interrupt_logic:interrupt_control
i_interrupt => update_enable~0.IN1
i_returni => update_enable.IN1
instruction0 => new_enable_value.IN1
active_interrupt => update_enable~1.IN0
active_interrupt => update_enable~0.IN0
active_interrupt => new_enable_value.IN0
active_interrupt => shaddow_carry~reg0.ENA
active_interrupt => shaddow_zero~reg0.ENA
carry_flag => shaddow_carry~reg0.DATAIN
zero_flag => shaddow_zero~reg0.DATAIN
reset => interrupt_enable~1.OUTPUTSELECT
interrupt_enable <= interrupt_enable~reg0.DB_MAX_OUTPUT_PORT_TYPE
shaddow_carry <= shaddow_carry~reg0.DB_MAX_OUTPUT_PORT_TYPE
shaddow_zero <= shaddow_zero~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => interrupt_enable~reg0.CLK
clk => shaddow_carry~reg0.CLK
clk => shaddow_zero~reg0.CLK


|MAXII_PicoBlaze|ROM_test:program
address[0] => Mux7.IN134
address[0] => Mux6.IN263
address[0] => Mux5.IN263
address[0] => Mux4.IN263
address[0] => Mux3.IN263
address[0] => Mux2.IN134
address[0] => Mux1.IN263
address[0] => Mux0.IN263
address[1] => Mux6.IN262
address[1] => Mux5.IN262
address[1] => Mux4.IN262
address[1] => Mux3.IN262
address[1] => Mux1.IN262
address[1] => Mux0.IN262
address[2] => Mux7.IN133
address[2] => Mux6.IN261
address[2] => Mux5.IN261
address[2] => Mux4.IN261
address[2] => Mux3.IN261
address[2] => Mux2.IN133
address[2] => Mux1.IN261
address[2] => Mux0.IN261
address[3] => Mux7.IN132
address[3] => Mux6.IN260
address[3] => Mux5.IN260
address[3] => Mux4.IN260
address[3] => Mux3.IN260
address[3] => Mux2.IN132
address[3] => Mux1.IN260
address[3] => Mux0.IN260
address[4] => Mux7.IN131
address[4] => Mux6.IN259
address[4] => Mux5.IN259
address[4] => Mux4.IN259
address[4] => Mux3.IN259
address[4] => Mux2.IN131
address[4] => Mux1.IN259
address[4] => Mux0.IN259
address[5] => Mux7.IN130
address[5] => Mux6.IN258
address[5] => Mux5.IN258
address[5] => Mux4.IN258
address[5] => Mux3.IN258
address[5] => Mux2.IN130
address[5] => Mux1.IN258
address[5] => Mux0.IN258
address[6] => Mux7.IN129
address[6] => Mux6.IN257
address[6] => Mux5.IN257
address[6] => Mux4.IN257
address[6] => Mux3.IN257
address[6] => Mux2.IN129
address[6] => Mux1.IN257
address[6] => Mux0.IN257
address[7] => Mux7.IN128
address[7] => Mux6.IN256
address[7] => Mux5.IN256
address[7] => Mux4.IN256
address[7] => Mux3.IN256
address[7] => Mux2.IN128
address[7] => Mux1.IN256
address[7] => Mux0.IN256
clk => dout[15]~reg0.CLK
clk => dout[14]~reg0.CLK
clk => dout[13]~reg0.CLK
clk => dout[12]~reg0.CLK
clk => dout[11]~reg0.CLK
clk => dout[10]~reg0.CLK
clk => dout[9]~reg0.CLK
clk => dout[8]~reg0.CLK
clk => dout[7]~reg0.CLK
clk => dout[6]~reg0.CLK
clk => dout[5]~reg0.CLK
clk => dout[4]~reg0.CLK
clk => dout[3]~reg0.CLK
clk => dout[2]~reg0.CLK
clk => dout[1]~reg0.CLK
clk => dout[0]~reg0.CLK
dout[0] <= dout[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[1] <= dout[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[2] <= dout[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[3] <= dout[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[4] <= dout[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[5] <= dout[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[6] <= dout[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[7] <= dout[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[8] <= dout[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[9] <= dout[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[10] <= dout[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[11] <= dout[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[12] <= dout[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[13] <= dout[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[14] <= dout[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[15] <= dout[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE


